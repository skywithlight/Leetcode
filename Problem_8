class Solution {
public:
    int findShortestSubArray(vector<int>& nums) {
        int len, i, j, sum = 1, max_degree = 1, min, tem, ans;
        len = nums.size();
        
        vector<int> count(50000, 0);
        vector<int> f_i(50000, -1);
        
        for (i = 0; i < len; i++){
            count[nums[i]]++;
            if (max_degree < count[nums[i]])
                max_degree = count[nums[i]];
        }
        
        for (i = 0; i < len; i++){
            if (f_i[nums[i]] == -1){
                f_i[nums[i]] = i;
            }
        }
        
        ans = len;
        for (i = len - 1; i >= 0; i--){
            if (count[nums[i]] == max_degree){
                if ((i - f_i[nums[i]] + 1) < ans){
                    ans = (i - f_i[nums[i]] + 1);
                }
            }
            count[nums[i]] = 0;
        }
        
        return ans;
    }
};
