class Solution {
public:
    int numMagicSquaresInside(vector<vector<int>>& grid) {
        int n = grid.size(), m = grid[0].size(), ans = 0;
        for (int i = 0; i < n - 2; i++){
            for (int j = 0; j < m - 2; j++){
                if (grid[i][j] + grid[i][j + 1] + grid[i][j + 2] == 15 && grid[i + 1][j] + grid[i + 1][j + 1] + grid[i + 1][j + 2] == 15 && grid[i + 2][j] + grid[i + 2][j + 1] + grid[i + 2][j + 2] == 15 && grid[i][j] + grid[i + 1][j] + grid[i + 2][j] == 15 && grid[i][j + 1] + grid[i + 1][j + 1] + grid[i + 2][j + 1] == 15 && grid[i][j + 2] + grid[i + 1][j + 2] + grid[i + 2][j + 2] == 15 && grid[i][j] + grid[i + 1][j + 1] + grid[i + 2][j + 2] == 15 && grid[i][j + 2] + grid[i + 1][j + 1] + grid[i + 2][j] == 15){
                    if ((grid[i][j] > 0 && grid[i][j] <= 9) && (grid[i][j + 1] > 0 && grid[i][j + 1] <= 9) && (grid[i][j + 2] > 0 && grid[i][j + 2] <= 9) && (grid[i + 1][j] > 0 && grid[i + 1][j] <= 9) && (grid[i + 1][j + 1] > 0 && grid[i + 1][j + 1] <= 9) && (grid[i + 1][j + 2] > 0 && grid[i + 1][j + 2] <= 9) && (grid[i + 2][j] > 0 && grid[i + 2][j] <= 9) && (grid[i + 2][j + 1] > 0 && grid[i + 2][j + 1] <= 9) && (grid[i + 2][j + 2] > 0 && grid[i + 2][j + 2] <= 9))
                    ans++;
                }
            }            
        }
        return ans;
    }
};
