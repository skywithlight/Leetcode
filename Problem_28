class Solution {
public:
    vector<vector<int>> generateMatrix(int n) {
        vector< vector <int>> a(n);
        int p = n, p2 = 0, s2 = 1, s = n, l = 1, i = 0, j = 0, count = 2;
        a[0].push_back(1);
        for (int i = 0; i < n; i++){
            for (int j = 0; j < n; j++){
                if (i != 0 || j != 0){
                    a[i].push_back(0);
                }
            }
        }
        while (l < n * n){
            // right
            while (j + 1 < s && l < n * n){
                j++;
                a[i][j] = count;
                l++;
                count++;
            }
            s--;
            // down
            while (i + 1 < p && l < n * n){
                i++;
                a[i][j] = count;
                l++;
                count++;
            }
            p--;
            // left
            while (j - 1 >= p2 && l < n * n){
                j--;
                a[i][j] = count;
                l++;
                count++;
            }
            p2++;
            // up
            while (i - 1 >= s2 && l < n * n){
                i--;
                a[i][j] = count;
                l++;
                count++;
            }
            s2++;
        }
        return a;
    }
};
